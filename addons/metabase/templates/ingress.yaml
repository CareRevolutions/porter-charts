{{- $fullName := include "docker-template.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if .Values.ingress.enabled -}}
{{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "docker-template.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    {{/* - if .Values.ingress.tls */}}
    {{/* - if not (hasKey .Values.ingress.annotations "cert-manager.io/cluster-issuer") */}}
    {{/* - if .Values.ingress.wildcard */}}
    #cert-manager.io/cluster-issuer: letsencrypt-prod-wildcard
    {{/* - else */}}
    cert-manager.io/cluster-issuer: letsencrypt-prod
    {{/* - end */}}
    {{/* - end */}}
    {{/* - end */}}
    # provider-agnostic default annotations
    # if value is provided as "null" or null, it is unset 
    {{/* - if gt (len .Values.ingress.annotations) 0 */}}
    {{/* - range $k, $v := .Values.ingress.annotations */}}
    {{/* - if $v */}}
    {{/* - if and (not (eq $v "null")) $v */}}
    {{/* $k */}} {{/* $v */}}
    {{/* - end */}}
    {{/* - end */}}
    {{/* - end */}}
    {{/* - end */}}
spec:
  {{- if .Values.ingress.tls }}
  tls:
    - hosts:
        {{- range .Values.ingress.hosts }}
        - {{ . }}
        {{- end }}
      secretName: metabase-cert-tls
  {{- end }}

  rules:
    {{- range .Values.ingress.hosts }}
      - host: {{ . }}
        http:
          paths:
            - backend:
                serviceName: {{ $fullName }}
                servicePort: {{ $svcPort }}
    {{- end }}