name: Tailscale
tabs:
- name: services
  context:
    type: cluster
    config:
      group: core
      version: v1
      resource: services
  label: Services
  settings:
    omitFromLaunch: true
  sections:
  - name: section_one
    contents:
    - type: heading
      label: Available Services
    - type: subtitle
      label: The services below can be reached through your Tailscale VPN by IP.
    - type: service-ip-list
      value: |
        .items[] | {
          name: .metadata.labels["app.kubernetes.io/instance"],
          release: .metadata.labels["release"],
          type: .metadata.labels["app.kubernetes.io/name"],
          app: .metadata.labels["app"],
          managedBy: .metadata.labels["app.kubernetes.io/managed-by"],
          namespace: .metadata.namespace,
          clusterIP: .spec.clusterIP,
        } | select(.clusterIP!="None" and .managedBy=="Helm") | {
          name: .name,
          release: .release,
          type: .type,
          app: .app,
          namespace: .namespace,
          clusterIP: .clusterIP,
        }
- name: tailscale
  label: Tailscale Settings
  sections:
  - name: main
    contents:
    - type: heading
      label: Tailscale Auth Key
    - type: subtitle
      label: Provide a Tailscale auth key for this relay node to use. You can generate
        an auth key from the Tailscale dashboard by going to "Settings" -> "Auth Keys"
        and generating a one-off key. Auth keys will expire after 90 days by default.
        To disable key expiry consult the Tailscale docs.
    - type: input
      required: true
      variable: config.authKey
      placeholder: 'ex: tskey-0a1b2c3d4e5f6g7h8i9j'
      settings:
        type: password
    - type: heading
      label: Subnet Routes
      settings:
        docs: https://docs.getporter.dev/docs/tailscale#subnet-routes
    - type: subtitle
      label: Specify the IP range of the subnet you would like to advertise. If you
        don't know your cluster IP range you can set this after launch.
    - type: input
      required: true
      variable: config.ipRange
      placeholder: 'ex: 10.123.456.0/20'
      settings:
        type: string
