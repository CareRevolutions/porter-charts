name: Web
hasSource: true
tabs:
- name: main
  label: Main
  sections:
  - name: section_one
    contents:
    - type: heading
      label: Container Settings
    - type: variable
      variable: showStartCommand
  - name: command
    show_if: showStartCommand
    contents:
    - type: subtitle
      name: command_description
      label: (Optional) Set a start command for this service.
    - type: input
      label: Start Command
      placeholder: 'ex: sh ./script.sh'
      variable: container.command
      settings:
        type: string
  - name: section_one_cont
    contents:
    - type: subtitle
      label: Specify the port your application is running on.
    - type: input
      variable: container.port
      label: Container Port
      placeholder: 'ex: 80'
      settings:
        type: number
    - type: heading
      label: Deploy Webhook
    - type: checkbox
      variable: auto_deploy
      label: Auto-deploy when webhook is called.
  - name: network
    contents:
    - type: heading
      label: Network Settings
    - type: subtitle
      label: For containers that you do not want to expose to external traffic (e.g.
        databases and add-ons), you may make them accessible only to other internal
        services running within the same cluster.
    - type: checkbox
      variable: ingress.enabled
      label: Expose to external traffic
  - name: domain_toggle
    show_if: ingress.enabled
    contents:
    - type: subtitle
      label: Assign custom domain to your deployment. You must first create an A record
        in your domain provider that points to your cluster load balancer's IP address
        for this.
    - type: checkbox
      variable: ingress.custom_domain
      label: Configure Custom Domain
  - name: domain_name
    show_if: ingress.custom_domain
    contents:
    - type: array-input
      variable: ingress.hosts
      label: Domain Name
  - name: do_wildcard
    show_if:
      and:
      - ingress.custom_domain
      - currentCluster.service.is_do
    contents:
    - type: subtitle
      label: If you're hosting on Digital Ocean and have enabled the wildcard domains
        from the 'HTTPS Issuer', you can use a wildcard certificate.
    - type: checkbox
      variable: ingress.wildcard
      label: Use Wildcard Certificate
- name: resources
  label: Resources
  sections:
  - name: main_section
    contents:
    - type: heading
      label: Resources
    - type: subtitle
      label: Configure resources assigned to this container.
    - type: input
      label: RAM
      variable: resources.requests.memory
      placeholder: 'ex: 256'
      settings:
        unit: Mi
        type: number
    - type: input
      label: CPU
      variable: resources.requests.cpu
      placeholder: 'ex: 100'
      settings:
        unit: m
        type: number
    - type: input
      label: Replicas
      variable: replicaCount
      placeholder: 'ex: 1'
      settings:
        type: number
    - type: checkbox
      variable: autoscaling.enabled
      label: Enable autoscaling
  - name: autoscaler
    show_if: autoscaling.enabled
    contents:
    - type: input
      label: Minimum Replicas
      variable: autoscaling.minReplicas
      placeholder: 'ex: 1'
      settings:
        type: number
    - type: input
      label: Maximum Replicas
      variable: autoscaling.maxReplicas
      placeholder: 'ex: 10'
      settings:
        type: number
    - type: input
      label: Target CPU Utilization
      variable: autoscaling.targetCPUUtilizationPercentage
      placeholder: 'ex: 50'
      settings:
        omitUnitFromValue: true
        unit: '%'
        type: number
    - type: input
      label: Target RAM Utilization
      variable: autoscaling.targetMemoryUtilizationPercentage
      placeholder: 'ex: 50'
      settings:
        omitUnitFromValue: true
        unit: '%'
        type: number
- name: env
  label: Environment
  sections:
  - name: env_vars
    contents:
    - type: heading
      label: Environment Variables
    - type: subtitle
      label: Set environment variables for your secrets and environment-specific configuration.
    - type: key-value-array
      label: null
      variable: container.env.normal
      settings:
        type: env
- name: advanced
  label: Advanced
  sections:
  - name: ingress_annotations
    contents:
    - type: heading
      label: Ingress Custom Annotations
    - type: subtitle
      label: Assign custom annotations to Ingress. These annotations will overwrite
        the annotations Porter assigns by default.
    - type: key-value-array
      variable: ingress.annotations
  - name: health_check
    contents:
    - type: heading
      label: Custom Health Checks
    - type: subtitle
      label: Define custom health check endpoints to ensure zero down-time deployments.
    - type: checkbox
      variable: health.enabled
      label: Enable Custom Health Checks
  - name: health_check_endpoint
    show_if: health.enabled
    contents:
    - type: input
      label: Health Check Endpoint
      variable: health.path
      placeholder: 'ex: /healthz'
      settings:
        required: true
        type: string
    - type: heading
      label: Custom Health Check Rules
    - type: subtitle
      label: Configure how many times a health check will be performed before deeming
        the container as failed.
    - type: input
      label: Failure Threshold
      variable: health.failureThreshold
      placeholder: 'ex: 3'
      settings:
        type: number
    - type: subtitle
      label: Configure the interval at which health check is repeated in the case
        of failure.
    - type: input
      label: Repeat Interval
      variable: health.periodSeconds
      placeholder: 'ex: 30'
      settings:
        type: number
    - type: checkbox
      label: Enable Readiness Probe
      variable: health.readinessProbe.enabled
  - name: readiness_probe
    show_if: health.readinessProbe.enabled
    contents:
    - type: heading
      label: Readiness Probe
    - type: subtitle
      label: Configure readiness probe to decide whether traffic should be directed
        to a pod.
    - type: input
      label: Readiness Probe Endpoint
      variable: health.readinessProbe.path
      settings:
        type: string
    - type: input
      label: Repeat Interval
      variable: health.readinessProbe.periodSeconds
      placeholder: 'ex: 30'
      settings:
        type: number
  - name: persistence_toggle
    contents:
    - type: heading
      label: Persistent Disks
    - type: subtitle
      label: Attach persistent disks to your deployment to retain data across releases.
    - type: checkbox
      label: Enable Persistence
      variable: pvc.enabled
  - name: persistent_storage
    show_if: pvc.enabled
    contents:
    - type: input
      label: Persistent Storage
      variable: pvc.storage
      placeholder: 'ex: 20'
      settings:
        unit: Gi
        type: number
    - type: input
      label: Mount Path
      variable: pvc.mountPath
      placeholder: 'ex: /mypath'
      settings:
        required: true
        type: string
  - name: termination_grace_period
    contents:
    - type: heading
      label: Termination Grace Period
    - type: subtitle
      label: Specify how much time app processes have to gracefully shut down on SIGTERM.
    - type: input
      label: Termination Grace Period (seconds)
      variable: terminationGracePeriodSeconds
      placeholder: 'ex: 30'
      settings:
        type: number
  - name: container_hooks
    contents:
    - type: heading
      label: Container hooks
    - type: subtitle
      label: (Optional) Set post start or pre stop commands for this service.
    - type: input
      label: Post start command
      placeholder: 'ex: /bin/sh ./myscript.sh'
      variable: container.lifecycle.postStart
      settings:
        type: string
    - type: input
      label: Pre stop command
      placeholder: 'ex: /bin/sh ./myscript.sh'
      variable: container.lifecycle.preStop
      settings:
        type: string
  - name: cloud_sql_toggle
    show_if: currentCluster.service.is_gcp
    contents:
    - type: heading
      label: Google Cloud SQL
    - type: subtitle
      label: Securely connect to Google Cloud SQL (GKE only).
    - type: checkbox
      variable: cloudsql.enabled
      label: Enable Google Cloud SQL Proxy
  - name: cloud_sql_contents
    show_if: cloudsql.enabled
    contents:
    - type: input
      label: Instance Connection Name
      variable: cloudsql.connectionName
      placeholder: 'ex: project-123:us-east1:pachyderm'
      settings:
        type: string
    - type: input
      label: DB Port
      variable: cloudsql.dbPort
      placeholder: 'ex: 5432'
      settings:
        type: number
    - type: input
      label: Service Account JSON
      variable: cloudsql.serviceAccountJSON
      placeholder: 'ex: { <SERVICE_ACCOUNT_JSON> }'
      settings:
        type: string
